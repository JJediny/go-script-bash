#! /bin/bash

declare -r KCOV_DEV_PACKAGES=(
  'binutils-dev'
  'cmake'
  'libcurl4-openssl-dev'
  'libdw-dev'
  'libelf-dev'
  'libiberty-dev'
  'zlib1g-dev'
)

run_kcov() {
  local kcov_dir="$1"
  local coverage_dir="$2"
  local include_pattern="$3"
  local exclude_pattern="$4"
  local coveralls_url="$5"
  shift; shift; shift; shift; shift
  local kcov_path="$kcov_dir/src/kcov"

  if ! command -v apt-get >/dev/null; then
    @go.printf 'Coverage is only available on Linux platforms %s.\n' \
       'with apt-get.' >&2
    return 1
  elif [[ -d "$coverage_dir" ]]; then
    @go.printf '%s %s\n' "The $coverage_dir directory already exists." \
      'Please move or remove this directory first.' >&2
    return 1
  elif ! ( [[ -f "$kcov_path" ]] || clone_and_build_kcov "$kcov_dir" ); then
    return 1
  fi

  local kcov_flags=("--include-pattern=$include_pattern"
    "--exclude-pattern=$exclude_pattern")
  local send_to_coveralls='false'

  if [[ -n "$TRAVIS_JOB_ID" && -n "$coveralls_url" ]]; then
    send_to_coveralls='true'
    kcov_flags+=("--coveralls-id=$TRAVIS_JOB_ID")
  fi

  local kcov_argv=(
    "$kcov_path" "${kcov_flags[@]}" "$coverage_dir" "$_GO_SCRIPT" 'test' "$@")
  mkdir "$coverage_dir"
  printf 'Starting coverage run:\n  %s\n' "${kcov_argv[*]}"

  # Somehow kcov exits with a failure status on Travis, even though the tests
  # all pass and information is successfully posted to Coveralls.
  if "${kcov_argv[@]}" 2>/dev/null || -n "$TRAVIS_JOB_ID" ]]; then
    if [[ "$send_to_coveralls" == 'false' ]]; then
      @go.printf 'Coverage results located in:\n  %s\n' \
        "$_GO_ROOTDIR/$coverage_dir"
    else
      @go.printf 'Coverage results sent to:\n  %s\n' "$coveralls_url"
    fi
  else
    @go.printf 'kcov exited with errors'
    return 1
  fi
}

clone_and_build_kcov() {
  # The only way to be sure we've got a compatible version of kcov is to clone
  # and compile it ourselves.
  local kcov_dir="$1"
  local kcov_url='https://github.com/SimonKagstrom/kcov'

  if [[ ! -d "$kcov_dir" ]]; then
    @go.printf 'Cloning kcov repository from %s...\n' "$kcov_url"
    git clone "$kcov_url" "$kcov_dir"
  fi

  if [[ -z "$TRAVIS_OS_NAME" ]] && ! check_kcov_dev_packages_installed; then
    @go.printf "Installing dev packages to build kcov...\n"
    sudo apt-get install -y "${KCOV_DEV_PACKAGES[@]}"
  fi

  pushd tests/kcov >/dev/null
  @go.printf 'Building kcov...\n'
  cmake . && make
  local result="$?"
  popd >/dev/null

  if [[ "$result" -ne 0 ]]; then
    @go.printf 'Failed to build kcov; coverage run aborted.\n' >&2
    return 1
  fi
}

check_kcov_dev_packages_installed() {
  local packages
  packages="$(dpkg-query -W -f='${Package} ${Status}\n' \
    "${KCOV_DEV_PACKAGES[@]}")"

  if [[ "$?" -ne '0' || "$packages" =~ deinstall ]]; then
    return 1
  fi
}

#! /bin/bash
#
# Run automated tests
#
# Usage:
#   {{go}} {{cmd}} [--coverage|--edit|--list] [<glob>...]
#
# Options:
#   --coverage  Collect test coverage data using kcov (Linux only)
#   --edit      Open matching test files using `{{go}} edit`
#   --list      List test suite names without executing them
#
# Without <glob> arguments, runs (or edits, or lists) all tests. With one or
# more <glob> arguments, only runs tests matching 'tests/<glob>.bats'.
#
# If a <glob> doesn't match any test files, the command will return an error
# without running any tests. See `{{go}} help glob` for details.
#
# NOTE: If the <glob> produces errors, or generally doesn't do as you expect,
# you may need to include it in quotes so it isn't expanded by the shell
# _before_ executing the {{cmd}} command.

declare -r _GO_TEST_GLOB_ARGS=('--ignore' 'bats' 'tests' '.bats')
declare -r _GO_TEST_BATS_PATH='tests/bats/libexec/bats'
declare -r _GO_TEST_KCOV_DIR='tests/kcov'
declare -r _GO_TEST_KCOV_OUTDIR='tests/coverage'
declare -r _GO_TEST_KCOV_INCLUDE='go,go-core.bash,lib/,libexec/,scripts/'
declare -r _GO_TEST_KCOV_EXCLUDE='/tmp,tests/bats/'
declare -r _GO_TEST_KCOV_URL='https://coveralls.io/github/mbland/go-script-bash'

_test() {
  if [[ "$1" != '--complete' && ! -f "$_GO_TEST_BATS_PATH" ]]; then
    git submodule update --init tests/bats
  fi

  if [[ "$TRAVIS_OS_NAME" == 'linux' ]]; then
    local _GO_TEST_COVERAGE='true'
  fi

  . "$_GO_USE_MODULES" 'test'
  # Tab completions
  @go.test_main "$@"
}

_test "$@"

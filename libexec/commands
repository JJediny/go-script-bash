#! /bin/bash
#
# List all available commands or subcommands for a specified command

_@go.list_commands() {
  local cmd
  local __go_command_names

  if ! _@go.find_commands "$@"; then
    return 1
  fi

  for cmd in "${__go_command_names[@]}"; do
    echo $cmd
  done
}

_@go.summarize_commands() {
  local __go_command_names
  local __go_command_scripts
  local __go_longest_name_len

  if ! _@go.find_commands "$@"; then
    return 1
  fi

  . "$_GO_CORE_DIR/lib/command_descriptions"

  local i
  local cmd_name
  local cmd_script
  local __go_cmd_desc

  for ((i=0; i != "${#__go_command_names[@]}"; ++i)); do
    cmd_name="${__go_command_names[$i]}"
    cmd_script="${__go_command_scripts[$i]}"

    if ! _@go.command_summary "$cmd_script"; then
      __go_cmd_desc='error retrieving command summary'
    fi
    _@go.format_summary "$cmd_name" "$__go_cmd_desc" $__go_longest_name_len
  done
}

_@go.list_command_paths() {
  local __go_command_names
  local __go_command_scripts
  local __go_longest_name_len

  _@go.find_commands "$@" || return 1

  local i

  for ((i=0; i != "${#__go_command_names[@]}"; ++i)); do
    printf "%-${__go_longest_name_len}s  %s\n" \
      "${__go_command_names[$i]}" "${__go_command_scripts[$i]}"
  done
}

_@go.commands() {
  local action="list"

  case "$1" in
  --complete)  # Tab completions
    local word_index="$2"
    if [[ "$word_index" -eq '0' ]]; then
      echo '--summaries --paths'
    fi
    return
    ;;
  --*)
    action="${1#--}"
    shift
    ;;
  esac

  if [[ -z "$*" ]]; then
    set "${_GO_SEARCH_PATHS[@]}"

  elif [[ ! -e "$1" ]]; then
    if _@go.source_builtin 'aliases' --exists "$1"; then
      return 1
    fi

    local __go_cmd_path
    if ! _@go.set_command_path_and_argv "$@"; then
      return 1
    fi

    set "${__go_cmd_path}.d"
  fi

  . "$_GO_CORE_DIR/lib/commands"

  case "$action" in
  list)
    _@go.list_commands "$@"
    ;;
  summaries)
    _@go.summarize_commands "$@"
    ;;
  paths)
    _@go.list_command_paths "$@"
    ;;
  *)
    echo "unknown option: --$action"
    return 1
    ;;
  esac
}

_@go.commands "$@"
